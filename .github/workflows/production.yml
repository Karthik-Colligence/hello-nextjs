name: Production Deployment

on:
  push:
    branches:
      - main

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test-and-lint:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type check
        run: npx tsc --noEmit

      - name: Run tests
        run: |
          if [ -f "package.json" ] && grep -q "\"test\":" package.json; then
            npm test -- --passWithNoTests
          else
            echo "No test script found, skipping tests"
          fi

      - name: Build test
        run: npm run build

  deploy-production:
    name: Deploy to Production
    needs: test-and-lint
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://hello-nextjs.vercel.app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: |
          echo "Building for production environment..."
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          NODE_ENV: production
          NEXT_PUBLIC_ENV: production

      - name: Deploy to Production
        run: |
          echo "Deploying to production environment..."
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "Production deployment complete: $DEPLOYMENT_URL"

      - name: Create deployment summary
        run: |
          echo "## ðŸš€ Production Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** Production" >> $GITHUB_STEP_SUMMARY
          echo "- **URL:** https://hello-nextjs.vercel.app" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** main" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployed by:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployment time:** $(date)" >> $GITHUB_STEP_SUMMARY

  create-release:
    name: Create GitHub Release
    needs: deploy-production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate release notes
        id: release_notes
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "No previous tag found, this is the first release"
            COMMITS=$(git log --oneline --no-merges -n 10)
          else
            COMMITS=$(git log --oneline --no-merges ${PREVIOUS_TAG}..HEAD)
          fi
          
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Production Release v${{ github.run_number }}
          body: |
            ## Production Deployment
            
            **Deployment URL:** https://hello-nextjs.vercel.app
            **Commit:** ${{ github.sha }}
            
            ### Changes in this release:
            ```
            ${{ steps.release_notes.outputs.commits }}
            ```
            
            ---
            *Automated release from GitHub Actions*
          draft: false
          prerelease: false