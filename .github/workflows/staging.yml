name: Staging Deployment

on:
  push:
    branches:
      - staging

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test-and-lint:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type check
        run: npx tsc --noEmit

      - name: Run tests
        run: |
          if [ -f "package.json" ] && grep -q "\"test\":" package.json; then
            npm test -- --passWithNoTests
          else
            echo "No test script found, skipping tests"
          fi

  deploy-staging:
    name: Deploy to Staging
    needs: test-and-lint
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://hello-nextjs-staging.vercel.app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: |
          echo "Building for staging environment..."
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          NODE_ENV: staging
          NEXT_PUBLIC_ENV: staging

      - name: Deploy to Staging
        run: |
          echo "Deploying to staging environment..."
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} --alias=hello-nextjs-staging.vercel.app)
          echo "Staging deployment complete: $DEPLOYMENT_URL"

      - name: Create deployment summary
        run: |
          echo "## Staging Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** Staging" >> $GITHUB_STEP_SUMMARY
          echo "- **URL:** https://hello-nextjs-staging.vercel.app" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** staging" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployed by:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployment time:** $(date)" >> $GITHUB_STEP_SUMMARY

  notify-deployment:
    name: Notify Deployment Status
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send deployment notification
        run: |
          if [ "${{ needs.deploy-staging.result }}" == "success" ]; then
            echo "✅ Staging deployment successful!"
          else
            echo "❌ Staging deployment failed!"
          fi